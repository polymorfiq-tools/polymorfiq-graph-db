name: test

on:
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test_rust:
    runs-on: ubuntu-latest
    env:
      working-directory: ./lib
    steps:
    - uses: actions/checkout@v2
    - name: Test Rust Lib
      working-directory: ${{env.working-directory}}
      run: cargo test

  build_wasm:
    needs: test_rust
    runs-on: ubuntu-latest
    env:
      working-directory: ./wasm
      wasm-file: wasm/target/wasm32-unknown-unknown/release/wasm.wasm
      orig-wasm-file: wasm/target/wasm32-unknown-unknown/release/wasm-orig.wasm
    steps:
    - uses: actions/checkout@v2
    - run: rustup +nightly target add wasm32-unknown-unknown
    - name: Build
      working-directory: ${{env.working-directory}}
      env:
        WASM_FILE: ${{env.wasm-file}}
        ORIG_WASM_FILE: ${{env.orig-wasm-file}}
      run: |
        cargo build --release --target wasm32-unknown-unknown --verbose;
        cd ../;
        mv $WASM_FILE $ORIG_WASM_FILE;
    - name: Get Binaryen (wasm-opt)
      run: |
        wget https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz
        tar -xvzf binaryen-version_110-x86_64-linux.tar.gz
    - name: Optimize
      env:
        WASM_FILE: ${{env.wasm-file}}
        ORIG_WASM_FILE: ${{env.orig-wasm-file}}
      run: |
        ./binaryen-version_110/bin/wasm-opt $ORIG_WASM_FILE -o $WASM_FILE --strip-debug -Oz;

    - uses: actions/upload-artifact@master
      with:
        name: core-wasm
        path: |
          ${{env.wasm-file}}
          ${{env.orig-wasm-file}}

  generate_wat:
    needs: build_wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install wat-wasm
        run: npm install wat-wasm -g
      - uses: actions/download-artifact@master
        with:
          name: core-wasm
          path: wasm
      - name: Commit report
        run: |
          git config --global user.name 'Automated WAT-WASM';
          git config --global user.email 'automated-wasm@users.noreply.github.com';
          wat-wasm wasm/wasm.wasm -o bin/deployed-optimized.wat;
          git add bin/deployed-optimized.wat;

          wat-wasm wasm/wasm-orig.wasm -o bin/deployed.wat;
          git add bin/deployed.wat;
          git diff-index --quiet HEAD || git commit -m "Automated wat-wasm";
          git push;
        